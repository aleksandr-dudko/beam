# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: PreCommit Portable Python

on:
  push:
    tags: [ 'v*' ]
    branches: ['portable-python-test-pr-target1', 'release-*' ]
    paths:
      - 'model/**'
      - 'runners/core-construction-java/**'
      - 'runners/core-java/**'
      - 'runners/extensions-java/**'
      - 'runners/flink/**'
      - 'runners/java-fn-execution/**'
      - 'runners/reference/**'
      - 'sdks/python/**'
      - 'release/**'
      - '.github/workflows/job_PreCommit_Portable_Python.yml'
  pull_request:
    #     branches: [ "master", "release-*" ]
    paths:
      - 'model/**'
      - 'runners/core-construction-java/**'
      - 'runners/core-java/**'
      - 'runners/extensions-java/**'
      - 'runners/flink/**'
      - 'runners/java-fn-execution/**'
      - 'runners/reference/**'
      - 'sdks/python/**'
      - 'release/**'
  issue_comment:
    types: [ created ]
#  schedule:
#    - cron: '* */6 * * *'


#Setting explicit permissions for the action to avoid the default permissions which are `write-all` in case of pull_request_target event
permissions:
  actions: write
  pull-requests: read
  checks: read
  contents: read
  deployments: read
  id-token: none
  issues: read
  discussions: read
  packages: read
  pages: read
  repository-projects: read
  security-events: read
  statuses: read

jobs:
  PortablePythonPreCommit:
    name: Portable Python
    runs-on: [ 'self-hosted', ubuntu-20.04 ]
    strategy:
      fail-fast: false
      matrix:
        python_version: [ '3.8' ]
    if: |
      github.event_name == 'push' ||
      github.event_name == 'pull_request' ||
      github.event_name == 'schedule' ||
      github.event.comment.body == 'Run Portable_Python PreCommit'
    steps:
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          ref: ${{github.event.pull_request.head.sha}}
      - name: Rerun on comment
        if: github.event.comment.body == 'Run Portable_Python PreCommit'
        uses: ./.github/actions/rerun-job-action
        with:
          pull_request_url: ${{ github.event.issue.pull_request.url }}
          github_repository: ${{ github.repository }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_job: ${{ github.job }}
          github_current_run_id: ${{ github.run_id }}
      - name: Install Java
        uses: actions/setup-java@v3.8.0
        with:
          distribution: 'zulu'
          java-version: '8'
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.20'
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: false
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: run Portable Python script
        uses: ./.github/actions/gradle-command-self-hosted-action
        with:
          gradle-command: PY_VER=${{matrix.python_version}} ./gradlew :sdks:python:test-suites:portable:py${PY_VER//.}:preCommitPy${PY_VER//.}
